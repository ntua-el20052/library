TYPE=TRIGGERS
triggers='CREATE DEFINER=`root`@`localhost` TRIGGER `check_booking_limit_trigger` BEFORE INSERT ON `booking` FOR EACH ROW BEGIN\n    DECLARE role INT;\n    DECLARE borrow_count INT;\n    DECLARE booking_count INT;\n    DECLARE books_count INT;\n    DECLARE situationship VARCHAR(25);\n    \n    SELECT status INTO situationship\n    FROM borrowing\n    WHERE user_id=NEW.user_id;\n    \n    SELECT role_id, nmbr_of_books INTO role, borrow_count\n    FROM users\n    WHERE user_id = NEW.user_id;\n    \n    SELECT nmbr_of_copies INTO books_count\n    FROM books\n    WHERE isbn=NEW.isbn;\n     \n    SELECT COUNT(*) INTO booking_count\n    FROM booking\n    WHERE user_id = NEW.user_id;\n    \n    IF situationship = \'delayed\' THEN\n    SIGNAL SQLSTATE \'45000\' SET MESSAGE_TEXT = \'You cannot book a book because you have not returned a book in time\';\n    END IF;\n    \n    IF EXISTS (\n        SELECT 1\n        FROM borrowing\n        WHERE user_id = NEW.user_id AND isbn = NEW.isbn\n    ) THEN\n        SIGNAL SQLSTATE \'45000\' SET MESSAGE_TEXT = \'You have already borrowed this book.\';\n    ELSEIF books_count > 0\n    THEN \n    SIGNAL SQLSTATE \'45000\' SET MESSAGE_TEXT = \'There is a copy of this book available.\';\n    \n    ELSEIF (role = 1 AND borrow_count >= 2) OR (role = 2 AND borrow_count >= 1) OR (role = 3 AND borrow_count>=1) THEN\n        SIGNAL SQLSTATE \'45000\' SET MESSAGE_TEXT = \'You have reached the maximum booking limit.\';\n    \n \n    \n    END IF;\nEND'
sql_modes=1098907648
definers='root@localhost'
client_cs_names='utf8mb4'
connection_cl_names='utf8mb4_unicode_ci'
db_cl_names='utf8mb4_general_ci'
created=1685019518656346
